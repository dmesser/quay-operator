apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    quay-component: clair-app
  name: clair-app
spec:
  replicas: 1
  selector:
    matchLabels:
      quay-component: clair-app
  template:
    metadata:
      labels:
        quay-component: clair-app
    spec:
      serviceAccountName: clair-app
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            quay-component: clair-app
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            quay-component: clair-app
      containers:
        - image: quay.io/projectquay/clair@sha256:77ffab0e44458d5725f2e9e5f2f57bda74b3bd073030611ca7cf5d753130c858
          imagePullPolicy: IfNotPresent
          name: clair-app
          env:
            - name: CLAIR_CONF
              value: /clair/config.yaml
            - name: CLAIR_MODE
              value: combo
          ports:
            - containerPort: 8080
              name: clair-http
              protocol: TCP
            - containerPort: 8089
              name: clair-intro
              protocol: TCP
          volumeMounts:
            - mountPath: /clair/
              name: config
            - mountPath: /var/run/certs
              name: certs
          startupProbe:
            tcpSocket:
              port: clair-intro
            periodSeconds: 10
            failureThreshold: 300
          readinessProbe:
            tcpSocket:
              port: 8080
          livelinessProbe:
            httpGet:
              port: clair-intro
              path: /healthz
      restartPolicy: Always
      volumes:
        - name: config
          secret:
            secretName: clair-config-secret
        # Mount the public certificate because we are using storage proxying.
        - name: certs
          secret:
            secretName: quay-config-tls
